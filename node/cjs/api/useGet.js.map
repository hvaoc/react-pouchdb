{"version":3,"sources":["../../../src/api/useGet.js"],"names":["UINT8ARRAY","ALLOWED_LIVE_OPTIONS","nextState","binary","doc","_deleted","_attachments","useListen","useGet","options","db","callee","example","id","attachments","otherOptions","optionsWithAttachmentAndBinaryOption","changesOptions","live","include_docs","since","doc_ids","setValue","get","status","Object","keys","every","option","includes","changes"],"mappings":"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","sourcesContent":["import { useMemo } from 'react';\nimport stringify from 'fast-json-stable-stringify';\nimport reverseArgs from '../utils/reverseArgs';\nimport attachmentsAsUint8Arrays from '../attachmentsAsUint8Arrays';\nimport changes from '../changes';\nimport useDB from '../useDB';\n\nconst UINT8ARRAY = 'u8a';\nconst ALLOWED_LIVE_OPTIONS = ['attachments', 'ajax', 'binary', 'id'];\n\nasync function nextState(binary, doc) {\n  return binary && doc && !doc._deleted\n    ? {\n        ...doc,\n        _attachments: await attachmentsAsUint8Arrays(doc._attachments)\n      }\n    : doc;\n}\n\nexport default useListen =>\n  reverseArgs(function useGet(options, db) {\n    db = useDB(db, {\n      callee: 'useGet',\n      example: 'useGet(db, options)'\n    });\n    const { id, attachments, ...otherOptions } = options;\n    const binary = attachments === UINT8ARRAY;\n    const optionsWithAttachmentAndBinaryOption = useMemo(\n      () => ({\n        binary,\n        ...otherOptions,\n        attachments: !!attachments\n      }),\n      [binary, stringify(otherOptions), !!attachments]\n    );\n    const changesOptions = useMemo(\n      () => ({\n        ...optionsWithAttachmentAndBinaryOption,\n        live: true,\n        include_docs: true,\n        since: 'now',\n        doc_ids: [id]\n      }),\n      [optionsWithAttachmentAndBinaryOption, id]\n    );\n    return useListen(db, options, async setValue => {\n      try {\n        setValue(\n          await nextState(\n            binary,\n            await db.get(id, optionsWithAttachmentAndBinaryOption)\n          )\n        );\n      } catch (error) {\n        if (error.status !== 404) {\n          throw error;\n        }\n        setValue(null);\n      }\n\n      // Live?\n      if (\n        Object.keys(options).every(option =>\n          ALLOWED_LIVE_OPTIONS.includes(option)\n        )\n      ) {\n        return db::changes(changesOptions, async ({ doc }) => {\n          setValue(await nextState(binary, doc));\n        });\n      }\n    });\n  });\n"],"file":"useGet.js"}