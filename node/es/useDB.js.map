{"version":3,"sources":["../../src/useDB.js"],"names":["useContext","useMemo","useEffect","PouchDB","stringify","createStore","DBContext","createPouchDB","store","useDBOptions","options","optionsObject","name","key","optionsMemoized","dependencies","undefined","value","close","cleanup","useDBContext","useDB","any","callee","example","dbInstance","dbOptions","dbContext","db","Error"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,OAArB,EAA8BC,SAA9B,QAA+C,OAA/C;AACA,OAAOC,OAAP;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,IAAMC,KAAK,GAAGH,WAAW,EAAzB;AAEA,OAAO,SAASI,YAAT,CAAsBC,OAAtB,EAA+B;AACpC,MAAMC,aAAa,GACjB,OAAOD,OAAP,KAAmB,QAAnB,GAA8B;AAAEE,IAAAA,IAAI,EAAEF;AAAR,GAA9B,GAAkDA,OADpD;AAEA,MAAMG,GAAG,GAAGT,SAAS,CAACO,aAAD,CAArB;AACA,MAAMG,eAAe,GAAGb,OAAO,CAAC;AAAA,WAAMU,aAAN;AAAA,GAAD,EAAsB,CAACE,GAAD,CAAtB,CAA/B;AACA,MAAME,YAAY,GAAG,CAACD,eAAD,CAArB;;AALoC,iBAMXb,OAAO,CAC9B;AAAA,WACEY,GAAG,KAAKG,SAAR,GACI,EADJ,GAEIR,KAAK,CAAC,CAACK,GAAD,CAAD,EAAQ;AAAA,aAAM,CACjBC,eAAe,GAAGP,aAAa,CAACO,eAAD,CAAhB,GAAoCE,SADlC,EAEjB,UAAAC,KAAK,EAAI;AACPA,QAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEC,KAAP;AACD,OAJgB,CAAN;AAAA,KAAR,CAHX;AAAA,GAD8B,EAU9BH,YAV8B,CANI;AAAA;AAAA,MAM7BE,KAN6B;AAAA,MAMtBE,OANsB;;AAkBpCjB,EAAAA,SAAS,CAAC;AAAA,WAAMiB,OAAN;AAAA,GAAD,EAAgBJ,YAAhB,CAAT;AACA,SAAOE,KAAP;AACD;AAED,OAAO,SAASG,YAAT,GAAwB;AAC7B,SAAOpB,UAAU,CAACM,SAAD,CAAjB;AACD;AAED,eAAe,SAASe,KAAT,CACbC,GADa,EAGb;AAAA;;AAAA,iFADmD,EACnD;AAAA,yBADEC,MACF;AAAA,MADEA,MACF,4BADW,OACX;AAAA,0BADoBC,OACpB;AAAA,MADoBA,OACpB,6BAD8B,gBAC9B;;AACA,MAAMC,UAAU,GAAGH,GAAG,YAAYnB,OAAf,GAAyBmB,GAAzB,GAA+BN,SAAlD;AACA,MAAMN,OAAO,GAAGe,UAAU,GAAGT,SAAH,GAAeM,GAAzC;AACA,MAAMI,SAAS,GAAGjB,YAAY,CAACC,OAAD,CAA9B;AACA,MAAMiB,SAAS,GAAGP,YAAY,EAA9B;AAEA,MAAMQ,EAAE,2BAAGH,UAAH,qDAAiBC,SAAjB,yCAA8BC,SAAtC;;AAEA,MAAI,CAACC,EAAL,EAAS;AACP,UAAM,IAAIC,KAAJ,CACJN,MAAM,cACGA,MADH,4GAC+GC,OAD/G,SAEF,8DAHA,CAAN;AAKD;;AACD,SAAOI,EAAP;AACD","sourcesContent":["import { useContext, useMemo, useEffect } from 'react';\nimport PouchDB from 'pouchdb';\nimport stringify from 'fast-json-stable-stringify';\nimport createStore from './utils/createStore';\nimport DBContext from './DBContext';\nimport createPouchDB from './createPouchDB';\n\nconst store = createStore();\n\nexport function useDBOptions(options) {\n  const optionsObject =\n    typeof options === 'string' ? { name: options } : options;\n  const key = stringify(optionsObject);\n  const optionsMemoized = useMemo(() => optionsObject, [key]);\n  const dependencies = [optionsMemoized];\n  const [value, cleanup] = useMemo(\n    () =>\n      key === undefined\n        ? []\n        : store([key], () => [\n            optionsMemoized ? createPouchDB(optionsMemoized) : undefined,\n            value => {\n              value?.close();\n            }\n          ]),\n    dependencies\n  );\n  useEffect(() => cleanup, dependencies);\n  return value;\n}\n\nexport function useDBContext() {\n  return useContext(DBContext);\n}\n\nexport default function useDB(\n  any,\n  { callee = 'useDB', example = 'useDB(options)' } = {}\n) {\n  const dbInstance = any instanceof PouchDB ? any : undefined;\n  const options = dbInstance ? undefined : any;\n  const dbOptions = useDBOptions(options);\n  const dbContext = useDBContext();\n\n  const db = dbInstance ?? dbOptions ?? dbContext;\n\n  if (!db) {\n    throw new Error(\n      callee\n        ? `\\`${callee}\\` was called without \\`db\\` and database is not in context. Provide database using <PouchDB> or \\`${example}\\``\n        : 'Database is not in context. Provide database using <PouchDB>'\n    );\n  }\n  return db;\n}\n"],"file":"useDB.js"}