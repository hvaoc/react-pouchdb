{"version":3,"sources":["../src/attachmentsAsUint8Arrays.js"],"names":["blobToUint8Array","blob","Promise","resolve","reader","FileReader","onload","Uint8Array","result","readAsArrayBuffer","global","Buffer","x","attachments","Object","entries","name","data","attachmentsAsUint8Arrays"],"mappings":";;;;;AAAA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,IAAI;AAAA,SAC3B,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AACrB,QAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAgB;AAAA,aAAMH,OAAO,CAAC,IAAII,UAAJ,CAAeH,MAAM,CAACI,MAAtB,CAAD,CAAb;AAAA,KAAhB;;AACAJ,IAAAA,MAAM,CAACK,iBAAP,CAAyBR,IAAzB;AACD,GAJD,CAD2B;AAAA,CAA7B;;AAOA,eAAe,QAAOS,MAAP,yCAAOA,MAAP,OAAkB,QAAlB,IAA8BA,MAAM,CAACC,MAArC,GACX,UAAAC,CAAC;AAAA,SAAIA,CAAJ;AAAA,CADU;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEX,iBAAwCC,WAAxC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACQL,YAAAA,MADR,GACiB,EADjB;AAAA,sCAEiCM,MAAM,CAACC,OAAP,CAAeF,WAAf,CAFjC;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,yEAEcG,IAFd,0BAEsBC,IAFtB,yBAEsBA,IAFtB;AAAA;AAAA,mBAGyBjB,gBAAgB,CAACiB,IAAD,CAHzC;;AAAA;AAGIT,YAAAA,MAAM,CAACQ,IAAD,CAHV;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAKSR,MALT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAFW;;AAAA,WAEIU,wBAFJ;AAAA;AAAA;;AAAA,SAEIA,wBAFJ;AAAA,GAAf","sourcesContent":["const blobToUint8Array = blob =>\n  new Promise(resolve => {\n    const reader = new FileReader();\n    reader.onload = () => resolve(new Uint8Array(reader.result));\n    reader.readAsArrayBuffer(blob);\n  });\n\nexport default typeof global === 'object' && global.Buffer\n  ? x => x\n  : async function attachmentsAsUint8Arrays(attachments) {\n      const result = {};\n      for (const [name, { data }] of Object.entries(attachments)) {\n        result[name] = await blobToUint8Array(data);\n      }\n      return result;\n    };\n"],"file":"attachmentsAsUint8Arrays.js"}