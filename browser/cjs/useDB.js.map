{"version":3,"sources":["../../src/useDB.js"],"names":["store","useDBOptions","options","optionsObject","name","key","optionsMemoized","dependencies","undefined","value","close","cleanup","useDBContext","DBContext","useDB","any","callee","example","dbInstance","PouchDB","dbOptions","dbContext","db","Error"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,KAAK,GAAG,2BAAd;;AAEO,SAASC,YAAT,CAAsBC,OAAtB,EAA+B;AACpC,MAAMC,aAAa,GACjB,OAAOD,OAAP,KAAmB,QAAnB,GAA8B;AAAEE,IAAAA,IAAI,EAAEF;AAAR,GAA9B,GAAkDA,OADpD;AAEA,MAAMG,GAAG,GAAG,sCAAUF,aAAV,CAAZ;AACA,MAAMG,eAAe,GAAG,oBAAQ;AAAA,WAAMH,aAAN;AAAA,GAAR,EAA6B,CAACE,GAAD,CAA7B,CAAxB;AACA,MAAME,YAAY,GAAG,CAACD,eAAD,CAArB;;AALoC,iBAMX,oBACvB;AAAA,WACED,GAAG,KAAKG,SAAR,GACI,EADJ,GAEIR,KAAK,CAAC,CAACK,GAAD,CAAD,EAAQ;AAAA,aAAM,CACjBC,eAAe,GAAG,4BAAcA,eAAd,CAAH,GAAoCE,SADlC,EAEjB,UAAAC,KAAK,EAAI;AACPA,QAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEC,KAAP;AACD,OAJgB,CAAN;AAAA,KAAR,CAHX;AAAA,GADuB,EAUvBH,YAVuB,CANW;AAAA;AAAA,MAM7BE,KAN6B;AAAA,MAMtBE,OANsB;;AAkBpC,wBAAU;AAAA,WAAMA,OAAN;AAAA,GAAV,EAAyBJ,YAAzB;AACA,SAAOE,KAAP;AACD;;AAEM,SAASG,YAAT,GAAwB;AAC7B,SAAO,uBAAWC,kBAAX,CAAP;AACD;;AAEc,SAASC,KAAT,CACbC,GADa,EAGb;AAAA;;AAAA,iFADmD,EACnD;AAAA,yBADEC,MACF;AAAA,MADEA,MACF,4BADW,OACX;AAAA,0BADoBC,OACpB;AAAA,MADoBA,OACpB,6BAD8B,gBAC9B;;AACA,MAAMC,UAAU,GAAGH,GAAG,YAAYI,uBAAf,GAAyBJ,GAAzB,GAA+BP,SAAlD;AACA,MAAMN,OAAO,GAAGgB,UAAU,GAAGV,SAAH,GAAeO,GAAzC;AACA,MAAMK,SAAS,GAAGnB,YAAY,CAACC,OAAD,CAA9B;AACA,MAAMmB,SAAS,GAAGT,YAAY,EAA9B;AAEA,MAAMU,EAAE,2BAAGJ,UAAH,qDAAiBE,SAAjB,yCAA8BC,SAAtC;;AAEA,MAAI,CAACC,EAAL,EAAS;AACP,UAAM,IAAIC,KAAJ,CACJP,MAAM,cACGA,MADH,4GAC+GC,OAD/G,SAEF,8DAHA,CAAN;AAKD;;AACD,SAAOK,EAAP;AACD","sourcesContent":["import { useContext, useMemo, useEffect } from 'react';\nimport PouchDB from 'pouchdb';\nimport stringify from 'fast-json-stable-stringify';\nimport createStore from './utils/createStore';\nimport DBContext from './DBContext';\nimport createPouchDB from './createPouchDB';\n\nconst store = createStore();\n\nexport function useDBOptions(options) {\n  const optionsObject =\n    typeof options === 'string' ? { name: options } : options;\n  const key = stringify(optionsObject);\n  const optionsMemoized = useMemo(() => optionsObject, [key]);\n  const dependencies = [optionsMemoized];\n  const [value, cleanup] = useMemo(\n    () =>\n      key === undefined\n        ? []\n        : store([key], () => [\n            optionsMemoized ? createPouchDB(optionsMemoized) : undefined,\n            value => {\n              value?.close();\n            }\n          ]),\n    dependencies\n  );\n  useEffect(() => cleanup, dependencies);\n  return value;\n}\n\nexport function useDBContext() {\n  return useContext(DBContext);\n}\n\nexport default function useDB(\n  any,\n  { callee = 'useDB', example = 'useDB(options)' } = {}\n) {\n  const dbInstance = any instanceof PouchDB ? any : undefined;\n  const options = dbInstance ? undefined : any;\n  const dbOptions = useDBOptions(options);\n  const dbContext = useDBContext();\n\n  const db = dbInstance ?? dbOptions ?? dbContext;\n\n  if (!db) {\n    throw new Error(\n      callee\n        ? `\\`${callee}\\` was called without \\`db\\` and database is not in context. Provide database using <PouchDB> or \\`${example}\\``\n        : 'Database is not in context. Provide database using <PouchDB>'\n    );\n  }\n  return db;\n}\n"],"file":"useDB.js"}